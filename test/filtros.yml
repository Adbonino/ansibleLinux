---
- name: Procesar entidades JSON desde un archivo
  hosts: localhost
  gather_facts: no
  vars:
    json_file: "vms.json"

  tasks:
    - name: Leer archivo JSON
      slurp:
        src: "{{ json_file }}"
      register: json_file_content

    - name: Convertir contenido a diccionario
      set_fact:
        entities_data: "{{ json_file_content.content | b64decode | from_json }}"

    - name: Crear lista 
      set_fact:
        vm_info: []
    
    - name: Agregar vm_name a la lista
      set_fact:
        vm_info: "{{ vm_info  + [{'vm_name': (item.data[0]['values'][0]['values'][0] if item.data[0]['values'][0]['values'] | length > 0 else none),
                                  'power_status': (item.data[1]['values'][0]['values'][0] if item.data[1]['values'][0]['values'] | length > 0 else none), 
                                  'cluster_name': (item.data[2]['values'][0]['values'][0] if item.data[2]['values'][0]['values'] | length > 0 else none),
                                  'ip_addresses': (item.data[3]['values'][0]['values'] | select('match', '^\\d+\\.\\d+\\.\\d+\\.\\d+$') | list if item.data[3]['values'] | length > 0 else none)
                                  }] 
                  }}"
      with_items: "{{ entities_data.msg.json.group_results[0].entity_results }}"

    
    - name: Mostrar lista de nombres de VMs
      debug:
        msg: "{{ vm_info }}"


